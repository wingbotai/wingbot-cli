{{#if notifications}}
/*
 * @author wingbot.ai
 */
'use strict';

const { Notifications } = require('wingbot');
const { NotificationsStorage } = require('wingbot-mongodb');
{{#if googleAnalytics}}
const analytics = require('universal-analytics');
const config = require('../config');
{{/if}}
const mongodb = require('./mongodb');
const log = require('./log');

const storage = new NotificationsStorage(mongodb);

const notifications = new Notifications(storage, {
    log,
    sendMoreMessagesOver24: false
});

{{#if googleAnalytics}}
const NON_INTERACTIVE_EVENTS = ['sent', 'delivery', 'notSent', 'leaved', 'failed'];
const SUBSCRIBTION_EVENTS = ['subscribed', 'unsubscribed'];

notifications.on('report', (event, campaignNameOrTag, { senderId }) => {
    if (config.gaCode) {
        const tracker = analytics(config.gaCode, senderId, { strictCidFormat: false });
        if (NON_INTERACTIVE_EVENTS.includes(event)) {
            tracker.set('ni', 1);
        }
        if (SUBSCRIBTION_EVENTS.includes(event)) {
            tracker.event('Event: Audience', event, campaignNameOrTag);
        } else {
            const value = event === 'positive' ? 1 : 0;
            tracker.event('Event: Notification', event, campaignNameOrTag, value);
        }
        tracker.send();
    }
});
{{/if}}

module.exports = notifications;
{{/if}}