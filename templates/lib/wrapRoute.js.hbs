{{#unless azureServerless}}
/*
 * @author wingbot.ai
 */
'use strict';
{{#if awsServerless}}const log = require('./log');{{/if}}

function wrapRoute (fn) {
{{#if expressOrAppService}}
    return (req, res, next) => {
        Promise.resolve(fn(req, res, next))
            .catch(next);
    };
{{/if}}{{#if awsServerless}}
    return async (event, context) => {
{{#if mongodbStorage}}
        // eslint-disable-next-line no-param-reassign
        context.callbackWaitsForEmptyEventLoop = false;
{{/if}}
        try {
            const res = await Promise.resolve(fn(event, context));
{{#if logzioToken}}
            log.sendAndClose();
{{/if}}
            return res;
        } catch (e) {
            log.error(e, event);
{{#if logzioToken}}
            log.sendAndClose();
{{/if}}
            return {
                statusCode: e.status || 500,
                headers: {
                    'Content-Type': 'text/plain'
                },
                body: e.message
            };
        }
    };
{{/if}}
}

module.exports = wrapRoute;
{{/unless}}
