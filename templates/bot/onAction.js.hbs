/*
 * @author wingbot.ai
 */
'use strict';

{{#if googleAnalytics}}
const analytics = require('universal-analytics');
const { replaceDiacritics } = require('webalize');
const { ai } = require('wingbot');
const config = require('../config');
{{/if}}
/**
 * Trigged, when action arrives to be able to record it
 *
 * @param {string} senderId
 * @param {string} action
 * @param {string} text
 * @param {Request} req
 */
function onAction (senderId, action, text, req) { // eslint-disable-line no-unused-vars
{{#if analytics}}
    if (config.isProduction && config.gaCode) {
        // attach google analytics
        if (req.state._doNotTrack) {
            return;
        }

        const useSenderId = req.state._mergedFromSenderId || senderId;

        const tracker = analytics(config.gaCode, useSenderId, { strictCidFormat: false });

        const { cn, cs, cm } = req.action(true);

        if (cs) {
            tracker.set('cs', cs);

            if (cn) tracker.set('cn', cn);
            if (cm) tracker.set('cm', cm);

            tracker.event('Campaign', cn || 'no name', cs, 1);
        }

        if (action) {
            tracker.pageview(action);
        }

        if (text && !req.quickReply()) {
            const word = replaceDiacritics(text).replace(/\s+/g, ' ').toLowerCase().trim();
            const { previousAction } = req.state || {};
            const intent = req.intent(ai.confidence);
            tracker.event('Text', previousAction || action, word, intent ? 0 : 1);
        } else if (req.isAttachment()) {
            const { type } = req.attachment();
            tracker.event('Attachment', action || 'attachment', type, 1);
        }

        tracker.send();
    }
{{/if}}
}

module.exports = onAction;
