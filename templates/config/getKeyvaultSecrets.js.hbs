{{#if keyvault}}
'use strict';

const KeyVault = require('azure-keyvault');
const msRestAzure = require('ms-rest-azure');

let client;

async function getAuthorizedClient () {
    if (client) {
        return client;
    }

    client = msRestAzure.loginWithAppServiceMSI({
        resource: 'https://vault.azure.net'
    })
        .then((credentials) => new KeyVault.KeyVaultClient(credentials));

    return client;
}

async function getSecret (domain, key, defaultValue = null) {
    if (!domain) {
        return defaultValue;
    }
    try {
        const kvClient = await getAuthorizedClient();

        const secret = await kvClient.getSecret(domain, key, '');

        return secret.value;
    } catch (e) {
        return defaultValue;
    }
}

async function getAllSecrets (domain, keys) {
    const kvClient = await getAuthorizedClient();

    const res = await Promise.all(keys
        .map((key) => kvClient.getSecret(domain, key, '')));

    return res.reduce((o, val) => Object.assign(o, {
        [val.id]: val.value
    }), {});
}

module.exports = {
    getSecret,
    getAllSecrets
};
{{/if}}