/**
 * @author wingbot.ai
 */
'use strict';

{{#unless wingbotOrchestrator}}
const wrapRoute = require('../lib/wrapRoute');

// eslint-disable-next-line no-unused-vars
async function trackEvent (pageId, senderId, text, url) {
    // put the tracking here
}
{{/unless}}
{{#if wingbotOrchestrator}}
const { replaceDiacritics } = require('webalize');
const { channel } = require('../bot');
const wrapRoute = require('../lib/wrapRoute');

function trackEvent (pageId, senderId, text, url) {
    const label = replaceDiacritics(text).replace(/\s+/g, ' ').toLowerCase().trim();

    return channel.trackEvent(pageId, senderId, {
        type: 'conversation',
        category: 'User: Button - url',
        action: url,
        label
    });
}
{{/if}}

module.exports.handler = wrapRoute(async (event) => {
    const {
        url, text, senderId, pageId
    } = event.queryStringParameters || {};

    if (!url) {
        return {
            statusCode: 404
        };
    }

    if (senderId && pageId) {
        await trackEvent(pageId, senderId, text, url);
    }

    return {
        statusCode: 301,
        headers: {
            Location: url
        }
    };
});
