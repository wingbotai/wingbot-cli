/*
 * @author wingbot.ai
 */
'use strict';

const { Tester } = require('wingbot');
// const assert = require('assert');
const { botFactory } = require('../../bot');
{{#if isMongoOrCosmos}}
const mongodb = require('../../lib/mongodb');
const { db: { mongod, url } } = require('../../config');

after(async function () {
    this.timeout(10000);

    await Promise.race([
        (async () => {
            await Promise.resolve(url);
            await mongodb(true);
            await mongod.stop();
        })(),
        new Promise((r) => {
            setTimeout(r, 9900);
        })
    ]);
});
{{/if}}
{{#if mssqlStorage}}
const mssql = require('../../lib/mssql');

after(async () => {
    const cp = await mssql.connection();
    cp.close();
});
{{/if}}

describe('Bot', function () {

    this.timeout(10000);

    let bot;

    before(() => {
        bot = botFactory(true);
    });

    it('should be able to run', async () => {
        const t = new Tester(bot);

        await t.postBack('start');
    });

});
